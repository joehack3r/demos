{
	"AWSTemplateFormatVersion" : "2010-09-09",

	"Description" : "Lambda to terminate instances that have events associated with them. This template creates everything but the Event Source: Scheduled Event",

	"Parameters" : {
		"LambdaBucket" : {
			"Description" : "Name of bucket containing lambda source code.",
			"Type" : "String"
		},
		"LambdaKeyTerminateInstancesWithEvents" : {
			"Description" : "Location and name of source code zip file.",
			"Type" : "String",
			"AllowedPattern" : "^[^\/].+\\.zip",
			"Default" : "lambdas/terminateInstancesWithEvents_dry-run.zip"
		},
		"LambdaHandlerTerminateInstancesWithEvents" : {
			"Description" : "Name of the function (within source code) that Lambda calls to start running the app.",
			"Type" : "String",
			"Default" : "terminateInstancesWithEvents.lambda_handler"
		}
	},

	"Resources" : {
		"LambdaIamRole": {
			"Type": "AWS::IAM::Role",
			"Properties": {
				"AssumeRolePolicyDocument": {
					"Statement": [
						{
							"Effect": "Allow",
							"Principal": {
								"Service": [
									"lambda.amazonaws.com"
								]
							},
							"Action": [
								"sts:AssumeRole"
							]
						}
					]
				},
				"Path": "/"
			}
		},

		"LambdaIamPolicy" : {
			"Type": "AWS::IAM::Policy",
			"Properties": {
				"PolicyName": "lambdaTerminateInstancesWithEvents",
				"PolicyDocument": {
					"Statement": [
						{
							"Action":[
								"ec2:DescribeInstanceStatus",
								"ec2:TerminateInstances"
							],
							"Effect":"Allow",
							"Resource":"*"
						},
						{
							"Sid": "",
							"Resource": "*",
							"Action": [
								"logs:CreateLogGroup",
								"logs:CreateLogStream",
								"logs:PutLogEvents"
							],
							"Effect": "Allow"
						}
					]
				},
				"Roles": [
					{ "Ref": "LambdaIamRole" }
				]
			}
		},

		"LambdaTerminateInstancesFuntion" : {
			"Type" : "AWS::Lambda::Function",
			"Properties" : {
				"Code" : {
					"S3Bucket" : { "Ref" : "LambdaBucket" },
					"S3Key" : { "Ref" : "LambdaKeyTerminateInstancesWithEvents" }
				},
				"Description" : "Query instance status to identify any events. If any instances have events, terminate the instance.",
				"Handler" : { "Ref" : "LambdaHandlerTerminateInstancesWithEvents" },
				"MemorySize" : 128,
				"Role" : {"Fn::GetAtt" : ["LambdaIamRole", "Arn"] },
				"Runtime" : "python2.7",
				"Timeout" : 3
			}
		}
	}
}

